# -*- coding: utf-8 -*-
"""load_model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m_Umm0rTCG6fshR6bKfM9ce7s9PO6O5E
"""

import tensorflow as tf
import numpy as np
from keras.models import load_model
from keras.metrics import binary_accuracy,categorical_accuracy
from sklearn.model_selection import train_test_split
import pickle
from sklearn.metrics import accuracy_score
from sklearn.decomposition import PCA
from sklearn import decomposition
import pandas as pd

model= load_model('3CNN.model')
input_set_labeled = np.genfromtxt ('training.csv', delimiter=",")
input_set=input_set_labeled[1:input_set_labeled.shape[0],:]
input_data=input_set[:,1:input_set.shape[1]]
target_data = input_set[:,0]
target_data=target_data.reshape(target_data.shape[0],1)


input_train,input_test, target_train, target_test =train_test_split(input_data,target_data,test_size=0.2, random_state=10)

sess = tf.Session()
init_var = tf.global_variables_initializer()
sess.run(init_var)
indices1 = tf.cast(target_test, tf.int32)
one_hot_vecs1 = tf.one_hot(indices1,np.max(sess.run(indices1))+1)
new_output=sess.run(one_hot_vecs1)
new_output=new_output.reshape(-1,10)
print(new_output.shape)

input_train_map=input_train.reshape(-1,28,28,1)
input_test_map=input_test.reshape(-1,28,28,1)

testing_set_labeled=np.genfromtxt ('testing.csv', delimiter=",")
test_set=testing_set_labeled[1:testing_set_labeled.shape[0],:]
print(test_set.shape)

print(model.evaluate(input_test_map, new_output, batch_size=147))
pre=model.predict(test_set.reshape(-1,28,28,1))
predict=np.argmax(pre,axis=1)

prediction = pd.DataFrame(predict, columns=['predictions']).to_csv('prediction.csv',index=False)

pkl_filename = "pickle_model.pkl" 
with open(pkl_filename, 'rb') as file:  
    pickle_model = pickle.load(file)
predict=pickle_model.predict(input_test)
print(accuracy_score(new_output,predict))

pkl_filename = "RFCModel.pkl" 
with open(pkl_filename, 'rb') as file:  
    rfc_model = pickle.load(file)
predict=rfc_model.predict(input_test)
print(accuracy_score(target_test,predict))

pkl_filename = "ExtraTreesModel.pkl" 
with open(pkl_filename, 'rb') as file:  
    et_model = pickle.load(file)
predict=et_model.predict(input_test)
print(accuracy_score(target_test,predict))

pkl_filename = "svm.pkl" 
with open(pkl_filename, 'rb') as file:  
    svm_model = pickle.load(file,encoding='latin1')

pca = decomposition.PCA()
pca.fit(input_test)
predict=svm_model.predict(pca.transform(input_test))
print(accuracy_score(target_test,predict))

pkl_filename = "knn2.pkl" 
with open(pkl_filename, 'rb') as file:  
    knn_model = pickle.load(file)

predict=knn_model.predict(input_test)
print(accuracy_score(target_test,predict))

print(knn_model.score(input_test,target_test))

# predict=rfc_model.predict(test_set)
# # predicts=model.predict(input_test_map)
# # print(predicts)
# prediction = pd.DataFrame(predict, columns=['predictions']).to_csv('prediction.csv',index=False)